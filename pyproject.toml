[tool.poetry]
name = "tvstreamer"
# Version is the **single source of truth**. `tvstreamer.__init__.__version__`
# is populated at runtime via `importlib.metadata.version()` to avoid keeping
# multiple copies in sync.
# Keep semantic version starting at 0.1.x while project is in early development
version = "0.3.3"
# Stream live & historical market data from TradingView’s undocumented
# WebSocket API.
description = "TradingView WebSocket integration & historical data downloader"
authors = ["Rup Jae <rupjae@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
include = ["LICENSE"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Intended Audience :: Developers"
]
# Repository metadata intentionally left blank while project identity is being re-established.
# homepage = ""
# repository = ""
# documentation = ""

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
# External runtime dependencies – streaming-only client keeps the list lean.
websocket-client = ">=0.57.0"
typer = "^0.9.0"
[tool.poetry.dependencies]
tomli = { version = "^2.0.1", python = "<3.11" }
websockets = { version = "^12.0", optional = true }
binarycookie = ">=0.0.1"

[tool.poetry.extras]
cli = ["typer", "websockets"]
dev = ["pytest", "pytest-timeout", "anyio", "pytest-cov", "coverage"]

[tool.poetry.scripts]
tvws = "tvstreamer.cli:app"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-timeout = "^2.4.0"
anyio = "^4.0.0"
[tool.poetry.group.dev.dependencies.trio]
version = "^0.30.0"
python = ">=3.9"
pytest-cov = "*"
coverage = "*"

# -------------------------------------------------------------------
# Development tooling – formatting, linting, type-checking
# -------------------------------------------------------------------
black = "^24.4.0"
ruff = "^0.4.0"
mypy = "^1.10.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# -------------------------------------------------------------------
# Tool configuration – Black
# -------------------------------------------------------------------

[tool.black]
line-length = 100
target-version = ["py311", "py312", "py313"]
# Exclude self (pyproject.toml) to avoid TOML parser errors on dependency tables
exclude = '''
/pyproject\.toml$
'''

# -------------------------------------------------------------------
# Tool configuration – Ruff
# -------------------------------------------------------------------


[tool.ruff]
line-length = 100

# New (v0.4+) Lint sub-table ----------------------------------------

[tool.ruff.lint]
# Limit rule-set to manageable core: style & error detection.
select = ["E", "F", "I"]
# E501 (line length) overlaps with Black; E402 for late imports in __init__.
ignore = ["E501", "E402", "F401", "I001"]

# -------------------------------------------------------------------
# Tool configuration – Pytest (pytest-timeout)
# -------------------------------------------------------------------

[tool.pytest.ini_options]
timeout = 10
timeout_method = "thread"
