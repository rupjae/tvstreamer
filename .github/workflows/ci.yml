name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-
            ${{ runner.os }}-poetry-${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install "poetry>=1.8,<2" poetry-plugin-export

      - name: Install pip-audit
        run: python -m pip install pip-audit

      - name: Install dependencies
        run: |
          poetry install --no-interaction --all-extras --sync

      - name: Security audit
        run: |
          poetry export -f requirements.txt --without-hashes -o requirements.txt
          pip-audit -r requirements.txt

      - name: Black – check formatting
        run: |
          poetry run black --check .

      - name: Ruff – lint
        run: |
          poetry run ruff check .

      - name: Mypy – static type analysis
        run: |
          poetry run mypy --strict tvstreamer

      - name: Run tests
        run: |
          poetry run pytest -q --cov=tvstreamer --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
